---
title: "Killer Plot"
subtitle: "Baseball Analysis"
format:
  revealjs: 
    # embed-resources: true
    slide-number: true
    chalkboard: 
      buttons: true
    preview-links: auto
    css: styles.css
server: shiny
---

```{r setup, include=FALSE}
set.seed(123)
library(grid)
library(knitr)
library(RSQLite)
library(dplyr)
library(lubridate)
library(data.table)
library(ggplot2)
library(caTools)
library(scales)
final_trackman_results <- read.csv('/Users/zacambrose/Downloads/test8_final_trackman_results.csv')
final_yakkertech_results <- read.csv('/Users/zacambrose/Downloads/test8_final_yakkertech_results.csv')

reciprocal_decimal = function(x) {
    int_part = floor(x)
    dec_part = x - int_part
    
    if (dec_part > 0) {
        reciprocal = 1 - dec_part
        result = int_part + reciprocal
    } else {
        result = int_part
    }
    
    return(result)
}
```

## Killer plot

::: columns
::: {.column width="25%"}
::: {style="font-size: 40%"}
```{r inputs}
selectInput("dropdown1", "Choose Ball Count:",
                        choices = c("Any", "3", "2", "1", "0"))
            selectInput("dropdown2", "Choose Strike Count:",
                        choices = c("Any", "2", "1", "0")) 
            selectInput("dropdown3", "Choose Pitcher Handedness:",
                        choices = c("Any", "Left", "Right"))
            selectInput("dropdown4", "Choose Pitch Type:",
                        choices = c("Any", "Fastball", "Sinker", "Curveball", "Slider", "Splitter", "Changeup", "Cutter"))
```

:::
:::

::: {.column width="75%"}
```{r plotoutput}
plotOutput("distPlot", height = "650px")
```
:::
:::


```{r plotrender}
#| context: server

output$distPlot <- renderPlot({
  
  
  trackmandata <- final_trackman_results %>%
    filter(Balls == as.character(input$dropdown1), 
           Strikes == as.character(input$dropdown2), 
           PitcherThrows == as.character(input$dropdown3), 
           AutoPitchType == as.character(input$dropdown4))
  
  yakkertechdata <- final_yakkertech_results %>%
    filter(Balls == input$dropdown1, 
           Strikes == input$dropdown2, 
           PitcherThrows == input$dropdown3, 
           AutoPitchType == input$dropdown4)
  
  diamond_vp <- viewport(width = 0.4, height = 0.5, just = c("left", "bottom"),angle=45)

  pushViewport(diamond_vp)
  
  # Baseball diamond
  grid.rect(x = unit(0, "npc"),
          y = unit(0, "npc"),
          width = unit(1, "npc"),
          height = unit(1, "npc"),
          gp = gpar(fill = "lightgreen"))
  
  # Home
  grid.rect(x = unit(-0.5, "npc"), y = unit(-0.5, "npc"),
          width = unit(0.1, "npc"), height = unit(0.1, "npc"),
          gp = gpar(fill = "white"),
          just=c("left", "bottom"))
  
  # 1B
  grid.rect(x = unit(0.5, "npc"), y = unit(-0.5, "npc"),
          width = unit(0.1, "npc"), height = unit(0.1, "npc"),
          gp = gpar(fill = "white"),
          just = c("right", "bottom"))
  
  
  # 2B
  grid.rect(x = unit(0.5, "npc"), y = unit(0.5, "npc"),
          width = unit(0.1, "npc"), height = unit(0.1, "npc"),
          gp = gpar(fill = "white"),
          just=c("right", "top"))
  
  # 3B
  grid.rect(x = unit(-0.5, "npc"), y = unit(0.5, "npc"),
          width = unit(0.1, "npc"), height = unit(0.1, "npc"),
          gp = gpar(fill = "white"),
          just = c("left", "top"))
  
  
  grid.circle(x = unit(0, "npc"),
            y = unit(0, "npc"),
            r = unit(0.1, "npc"),
            gp = gpar(fill = "tan"))

  rotated_vp <- viewport(x=0,y=-0.5,just = c("center", "bottom"))
  pushViewport(rotated_vp)
  if (trackmandata$AvgRunValue != 0 & !is.na(trackmandata$AvgRunValue)){

    if (trackmandata$AvgRunValue >= 0 & trackmandata$AvgRunValue < 1) {
      grid.circle(x = unit(trackmandata$AvgRunValue, "npc"),
                  y = unit(0, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
        grid.text(x = unit(trackmandata$AvgRunValue,"npc"),
                  y = unit(0, "npc"),
                  label = paste0(round(trackmandata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$AvgRunValue >= 1 & trackmandata$AvgRunValue < 2) {
      grid.circle(x = unit(1, "npc"),
                  y = unit(trackmandata$AvgRunValue - 1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(1,"npc"),
                  y = unit(trackmandata$AvgRunValue - 1, "npc"),
                  label = paste0(round(trackmandata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$AvgRunValue >= 2 & trackmandata$AvgRunValue < 3) {
      grid.circle(x = unit(reciprocal_decimal(trackmandata$AvgRunValue) - 2, "npc"),
                  y = unit(1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(reciprocal_decimal(trackmandata$AvgRunValue) - 2,"npc"),
                  y = unit(1, "npc"),
                  label = paste0(round(trackmandata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$AvgRunValue >= 3 & trackmandata$AvgRunValue < 4) {
      grid.circle(x = unit(0, "npc"),
                  y = unit(reciprocal_decimal(trackmandata$AvgRunValue) - 3, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(0,"npc"),
                  y = unit(reciprocal_decimal(trackmandata$AvgRunValue) - 3, "npc"),
                  label = paste0(round(trackmandata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10))
    }
  }
  if (trackmandata$std1RunValue != 0 & !is.na(trackmandata$std1RunValue)){
    # Standard dev + 1
    if (trackmandata$std1RunValue >= 0 & trackmandata$std1RunValue < 1) {
      grid.circle(x = unit(trackmandata$std1RunValue, "npc"),
                  y = unit(0, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
        grid.text(x = unit(trackmandata$std1RunValue,"npc"),
                  y = unit(0, "npc"),
                  label = paste0(round(trackmandata$std1RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$std1RunValue >= 1 & trackmandata$std1RunValue < 2) {
      grid.circle(x = unit(1, "npc"),
                  y = unit(trackmandata$std1RunValue - 1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(1,"npc"),
                  y = unit(trackmandata$std1RunValue - 1, "npc"),
                  label = paste0(round(trackmandata$std1RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$std1RunValue >= 2 & trackmandata$std1RunValue < 3) {
      grid.circle(x = unit(reciprocal_decimal(trackmandata$std1RunValue) - 2, "npc"),
                  y = unit(1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(reciprocal_decimal(trackmandata$std1RunValue) - 2,"npc"),
                  y = unit(1, "npc"),
                  label = paste0(round(trackmandata$std1RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$std1RunValue >= 3 & trackmandata$std1RunValue < 4) {
      grid.circle(x = unit(0, "npc"),
                  y = unit(reciprocal_decimal(trackmandata$std1RunValue) - 3, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(0,"npc"),
                  y = unit(reciprocal_decimal(trackmandata$std1RunValue) - 3, "npc"),
                  label = paste0(round(trackmandata$std1RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
  }
  # Standard dev + 2
  if (trackmandata$std2RunValue != 0 & !is.na(trackmandata$std2RunValue)){
    if (trackmandata$std2RunValue >= 0 & trackmandata$std2RunValue < 1) {
      grid.circle(x = unit(trackmandata$std2RunValue, "npc"),
                  y = unit(0, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
        grid.text(x = unit(trackmandata$std2RunValue,"npc"),
                  y = unit(0, "npc"),
                  label = paste0(round(trackmandata$std2RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$std2RunValue >= 1 & trackmandata$std2RunValue < 2) {
      grid.circle(x = unit(1, "npc"),
                  y = unit(trackmandata$std2RunValue - 1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(1,"npc"),
                  y = unit(trackmandata$std2RunValue - 1, "npc"),
                  label = paste0(round(trackmandata$std2RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$std2RunValue >= 2 & trackmandata$std2RunValue < 3) {
      grid.circle(x = unit(reciprocal_decimal(trackmandata$std2RunValue) - 2, "npc"),
                  y = unit(1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(reciprocal_decimal(trackmandata$std2RunValue) - 2,"npc"),
                  y = unit(1, "npc"),
                  label = paste0(round(trackmandata$std2RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
    if (trackmandata$std2RunValue >= 3 & trackmandata$std2RunValue < 4) {
      grid.circle(x = unit(0, "npc"),
                  y = unit(reciprocal_decimal(trackmandata$std2RunValue) - 3, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "red"))
      
        grid.text(x = unit(0,"npc"),
                  y = unit(reciprocal_decimal(trackmandata$std2RunValue) - 3, "npc"),
                  label = paste0(round(trackmandata$std2RunValue,3)),
                  gp = gpar(fontsize = 10))
    }
  }
  # Yakkertech:
  if (yakkertechdata$AvgRunValue != 0 & !is.na(yakkertechdata$AvgRunValue)){
    if (yakkertechdata$AvgRunValue >= 0 & yakkertechdata$AvgRunValue < 1) {
      grid.circle(x = unit(yakkertechdata$AvgRunValue, "npc"),
                  y = unit(0, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
        grid.text(x = unit(yakkertechdata$AvgRunValue,"npc"),
                  y = unit(0, "npc"),
                  label = paste0(round(yakkertechdata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$AvgRunValue >= 1 & yakkertechdata$AvgRunValue < 2) {
      grid.circle(x = unit(1, "npc"),
                  y = unit(yakkertechdata$AvgRunValue - 1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(1,"npc"),
                  y = unit(yakkertechdata$AvgRunValue - 1, "npc"),
                  label = paste0(round(yakkertechdata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$AvgRunValue >= 2 & yakkertechdata$AvgRunValue < 3) {
      grid.circle(x = unit(reciprocal_decimal(yakkertechdata$AvgRunValue) - 2, "npc"),
                  y = unit(1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(reciprocal_decimal(yakkertechdata$AvgRunValue) - 2,"npc"),
                  y = unit(1, "npc"),
                  label = paste0(round(yakkertechdata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$AvgRunValue >= 3 & yakkertechdata$AvgRunValue < 4) {
      grid.circle(x = unit(0, "npc"),
                  y = unit(reciprocal_decimal(yakkertechdata$AvgRunValue) - 3, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(0,"npc"),
                  y = unit(reciprocal_decimal(yakkertechdata$AvgRunValue) - 3, "npc"),
                  label = paste0(round(yakkertechdata$AvgRunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
  }
  # Standard dev + 1
  if (yakkertechdata$std1RunValue != 0 & !is.na(yakkertechdata$std1RunValue)){
    if (yakkertechdata$std1RunValue >= 0 & yakkertechdata$std1RunValue < 1) {
      grid.circle(x = unit(yakkertechdata$std1RunValue, "npc"),
                  y = unit(0, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
        grid.text(x = unit(yakkertechdata$std1RunValue,"npc"),
                  y = unit(0, "npc"),
                  label = paste0(round(yakkertechdata$std1RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$std1RunValue >= 1 & yakkertechdata$std1RunValue < 2) {
      grid.circle(x = unit(1, "npc"),
                  y = unit(yakkertechdata$std1RunValue - 1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(1,"npc"),
                  y = unit(yakkertechdata$std1RunValue - 1, "npc"),
                  label = paste0(round(yakkertechdata$std1RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$std1RunValue >= 2 & yakkertechdata$std1RunValue < 3) {
      grid.circle(x = unit(reciprocal_decimal(yakkertechdata$std1RunValue) - 2, "npc"),
                  y = unit(1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(reciprocal_decimal(yakkertechdata$std1RunValue) - 2,"npc"),
                  y = unit(1, "npc"),
                  label = paste0(round(yakkertechdata$std1RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$std1RunValue >= 3 & yakkertechdata$std1RunValue < 4) {
      grid.circle(x = unit(0, "npc"),
                  y = unit(reciprocal_decimal(yakkertechdata$std1RunValue) - 3, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(0,"npc"),
                  y = unit(reciprocal_decimal(yakkertechdata$std1RunValue) - 3, "npc"),
                  label = paste0(round(yakkertechdata$std1RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
  }
  # Standard dev + 2
  if (yakkertechdata$std2RunValue != 0 & !is.na(yakkertechdata$std2RunValue)){
    if (yakkertechdata$std2RunValue >= 0 & yakkertechdata$std2RunValue < 1) {
      grid.circle(x = unit(yakkertechdata$std2RunValue, "npc"),
                  y = unit(0, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
        grid.text(x = unit(yakkertechdata$std2RunValue,"npc"),
                  y = unit(0, "npc"),
                  label = paste0(round(yakkertechdata$std2RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$std2RunValue >= 1 & yakkertechdata$std2RunValue < 2) {
      grid.circle(x = unit(1, "npc"),
                  y = unit(yakkertechdata$std2RunValue - 1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(1,"npc"),
                  y = unit(yakkertechdata$std2RunValue - 1, "npc"),
                  label = paste0(round(yakkertechdata$std2RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
  
    if (yakkertechdata$std2RunValue >= 2 & yakkertechdata$std2RunValue < 3) {
      grid.circle(x = unit(reciprocal_decimal(yakkertechdata$std2RunValue) - 2, "npc"),
                  y = unit(1, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(reciprocal_decimal(yakkertechdata$std2RunValue) - 2,"npc"),
                  y = unit(1, "npc"),
                  label = paste0(round(yakkertechdata$std2RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
    if (yakkertechdata$std2RunValue >= 3 & yakkertechdata$std2RunValue < 4) {
      grid.circle(x = unit(0, "npc"),
                  y = unit(reciprocal_decimal(yakkertechdata$std2RunValue) - 3, "npc"),
                  r = unit(0.06, "npc"),
                  gp = gpar(fill = "blue"))
      
        grid.text(x = unit(0,"npc"),
                  y = unit(reciprocal_decimal(yakkertechdata$std2RunValue) - 3, "npc"),
                  label = paste0(round(yakkertechdata$std2RunValue,3)),
                  gp = gpar(fontsize = 10,col="white"))
    }
  }
  
  
  popViewport()
  
  outfield_vp <- viewport(x=0.62,y=0.62,width = 1, height = 1, just = c("center", "center"),angle=-45)
  pushViewport(outfield_vp)
  
  grid.text(x = unit(0.6, "npc"), y = unit(0.61, "npc"), label = "Exit Speeds", gp = gpar(fontsize = 14))
  grid.lines(x = unit(c(0, 1), "npc"), y = unit(c(0.52, 0.52), "npc"), gp = gpar(col = "black", lwd = 2))  
  grid.lines(x = unit(c(0, 1), "npc"), y = unit(c(0.4, 0.4), "npc"), gp = gpar(col = "black", lwd = 2)) 
  
  max_speed_global <- max(max(trackmandata$AvgExitSpeed, na.rm = TRUE), max(yakkertechdata$AvgExitSpeed, na.rm = TRUE))
  
  position_on_outfield_line <- function(speed, max_speed = max_speed_global) {
    return(speed / max_speed)
  }
  
  for (i in 1:nrow(trackmandata)) {
    trackman_speeds <- trackmandata[i, c("AvgExitSpeed", "StdNeg2ExitSpeed", "StdNeg1ExitSpeed", "Std1ExitSpeed", "Std2ExitSpeed")]
    trackman_positions <- sapply(trackman_speeds, position_on_outfield_line)
    for (j in 1:length(trackman_positions)) {
      grid.circle(x = unit(trackman_positions[j]-0.5, "npc"), y = unit(0.52, "npc"), r = unit(0.05, "npc"), gp = gpar(fill = "red"))
      grid.text(x = unit(trackman_positions[j]-0.5, "npc"), y = unit(0.52, "npc"), label = sprintf("%.1f", trackman_speeds[j]), gp = gpar(col = "white", fontsize = 10))
    }
  
    yakkertech_speeds <- yakkertechdata[i, c("AvgExitSpeed", "StdNeg2ExitSpeed", "StdNeg1ExitSpeed", "Std1ExitSpeed", "Std2ExitSpeed")]
    yakkertech_positions <- sapply(yakkertech_speeds, position_on_outfield_line)
    for (j in 1:length(yakkertech_positions)) {
      grid.circle(x = unit(yakkertech_positions[j]-0.5, "npc"), y = unit(0.4, "npc"), r = unit(0.05, "npc"), gp = gpar(fill = "blue"))
      grid.text(x = unit(yakkertech_positions[j]-0.5, "npc"), y = unit(0.4, "npc"), label = sprintf("%.1f", yakkertech_speeds[j]), gp = gpar(col = "white", fontsize = 10))
    }
  }

  popViewport()
  legend(x=0.7,y=0.2, legend = c("NCAA", "Frontier League"), fill = c("red", "blue"), bty = "o", cex = 1)
  
  })
```
